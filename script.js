const questions = [
  {theme: "üíß Eau", question: "üíß Eau ‚Äî Question 1 : Quelle est la proportion d‚Äôeau douce sur Terre ?", choices: ["3%", "10%", "25%", "50%"], answer: "3%"},
  {theme: "üíß Eau", question: "üíß Eau ‚Äî Question 2 : Quel pourcentage de l‚Äôeau douce est gel√©e dans les glaciers ?", choices: ["10%", "30%", "50%", "70%"], answer: "70%"},
  {theme: "üíß Eau", question: "üíß Eau ‚Äî Question 3 : Quel est le principal usage de l‚Äôeau douce dans le monde ?", choices: ["Usage domestique", "Industrie", "Agriculture", "Loisirs"], answer: "Agriculture"},
  {theme: "üíß Eau", question: "üíß Eau ‚Äî Question 4 : Quelle activit√© consomme le plus d‚Äôeau dans un foyer ?", choices: ["Lave-linge", "Toilettes", "Douche", "Lave-vaisselle"], answer: "Douche"},
  {theme: "üíß Eau", question: "üíß Eau ‚Äî Question 5 : Quelle est la source principale d‚Äôeau potable √† Wallis-et-Futuna ?", choices: ["Lacs", "Eaux souterraines", "Rivi√®res", "Eau de mer dessal√©e"], answer: "Eaux souterraines"},
  {theme: "üå§Ô∏è Climat", question: "Quel est l‚Äôeffet principal des gaz √† effet de serre ?", choices: ["Refroidir la plan√®te", "R√©duire la pluie", "Augmenter la temp√©rature", "Cr√©er des nuages"], answer: "Augmenter la temp√©rature"},
  {theme: "üå§Ô∏è Climat", question: "Quelle activit√© humaine contribue le plus au r√©chauffement climatique ?", choices: ["Lire un livre", "Transports en commun", "Voiture √† essence", "Marcher"], answer: "Voiture √† essence"},
  {theme: "üå± Biodiversit√©", question: "Qu‚Äôest-ce que la biodiversit√© ?", choices: ["Vari√©t√© des climats", "Diversit√© des esp√®ces vivantes", "Quantit√© d‚Äôarbres", "Eau potable"], answer: "Diversit√© des esp√®ces vivantes"},
  {theme: "‚ö° √ânergie", question: "Quelle √©nergie est renouvelable ?", choices: ["Charbon", "P√©trole", "Solaire", "Gaz naturel"], answer: "Solaire"},
  {theme: "üóëÔ∏è D√©chets", question: "Que faut-il faire avec les piles usag√©es ?", choices: ["Les jeter", "Les br√ªler", "Les enterrer", "Les rapporter"], answer: "Les rapporter"},
  {theme: "‚ôªÔ∏è Impacts sur Wallis et Futuna", question: "Quel impact est visible √† Futuna ?", choices: ["La neige", "Mont√©e des eaux", "Disparition des poissons", "Tornades"], answer: "Mont√©e des eaux"}
];

const citations = [
  "‚ÄúLa Terre ne nous appartient pas, nous l‚Äôempruntons √† nos enfants.‚Äù ‚Äì Proverbe am√©rindien",
  "‚ÄúIl n‚Äôy a pas de passagers sur le vaisseau Terre. Nous sommes tous des membres de l‚Äô√©quipage.‚Äù ‚Äì Marshall McLuhan",
  "‚ÄúLe meilleur moment pour planter un arbre √©tait il y a 20 ans. Le deuxi√®me meilleur moment est maintenant.‚Äù ‚Äì Proverbe chinois",
  "‚ÄúSauver notre plan√®te, c‚Äôest sauver notre maison.‚Äù ‚Äì Leonardo DiCaprio",
  "‚ÄúNous n'h√©ritons pas de la Terre de nos anc√™tres, nous l'empruntons √† nos enfants.‚Äù ‚Äì Antoine de Saint-Exup√©ry",
  "‚ÄúChaque geste compte, aussi petit soit-il.‚Äù ‚Äì Anonyme",
  "‚ÄúTou haofaki te kahau o te tou'u fanau.‚Äù ‚Äì Wallisien",
  "‚ÄúFaka ªapa ªapa ki he fenua mo e vai.‚Äù ‚Äì Futunien"
];

const modeSelect = document.getElementById("mode-select");
const themeSelect = document.getElementById("theme-select");
const startBtn = document.getElementById("start-btn");
const nextBtn = document.getElementById("next-btn");
const menu = document.getElementById("menu");
const quizContainer = document.getElementById("quiz-container");
const themeDisplay = document.getElementById("theme");
const questionDisplay = document.getElementById("question");
const answersContainer = document.getElementById("answers");
const timerDisplay = document.getElementById("timer-display");
const timerProgress = document.getElementById("timer-progress");
const timerBar = document.getElementById("timer-bar");
const resultContainer = document.getElementById("result-container");
const resultText = document.getElementById("result-text");
const citationEl = document.getElementById("citation");
const backToMenuBtn = document.getElementById("back-to-menu-btn");
const backToMenuDuringQuizBtn = document.getElementById("back-to-menu-during-quiz-btn");

let filteredQuestions = [], currentQuestionIndex = 0, score = 0, timerId, timeLeft, currentMode = "normal";
const MAX_TIME = 20;

function shuffle(a) {
  for (let i = a.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [a[i], a[j]] = [a[j], a[i]];
  }
}

startBtn.addEventListener("click", () => {
  const t = themeSelect.value;
  if (!t) return alert("Choisis une th√©matique !");
  currentMode = modeSelect.value;
  filteredQuestions = t === "aleatoire" ? [...questions] : questions.filter(q => q.theme === t);
  shuffle(filteredQuestions);
  score = 0;
  currentQuestionIndex = 0;
  menu.classList.add("hidden");
  quizContainer.classList.remove("hidden");
  backToMenuDuringQuizBtn.classList.remove("hidden");
  resultContainer.classList.add("hidden");
  citationEl.textContent = "";
  updateThemeDisplay(t);
  showQuestion();
});

function updateThemeDisplay(t) {
  themeDisplay.textContent = t === "aleatoire" ? "üé≤ Al√©atoire" : `Th√©matique : ${t}`;
}

function showQuestion() {
  clearInterval(timerId);
  answersContainer.innerHTML = "";
  nextBtn.classList.add("hidden");
  if (currentQuestionIndex >= filteredQuestions.length) return showResult();
  const q = filteredQuestions[currentQuestionIndex];
  questionDisplay.textContent = q.question;
  if (currentMode === "battle") {
    timerBar.classList.remove("hidden");
    startTimer();
  } else {
    timerBar.classList.add("hidden");
    timerDisplay.style.display = "none";
  }
  q.choices.forEach(c => {
    const b = document.createElement("button");
    b.textContent = c;
    b.addEventListener("click", () => selectAnswer(c));
    answersContainer.appendChild(b);
  });
}

function startTimer() {
  timerDisplay.style.display = "block";
  timeLeft = MAX_TIME;
  timerProgress.style.width = "100%";
  timerDisplay.textContent = `‚è≥ ${timeLeft}s`;
  timerId = setInterval(() => {
    timeLeft--;
    timerDisplay.textContent = `‚è≥ ${timeLeft}s`;
    timerBar.style.width = `${(timeLeft/MAX_TIME)*100}%`;
    if (timeLeft <= 0) {
      clearInterval(timerId);
      selectAnswer("");
    }
  }, 1000);
}

function selectAnswer(chosen) {
  clearInterval(timerId);
  const correct = filteredQuestions[currentQuestionIndex].answer;
  Array.from(answersContainer.children).forEach(b => {
    b.disabled = true;
    if (b.textContent === correct) b.classList.add("correct");
    if (chosen && b.textContent === chosen && chosen !== correct) b.classList.add("incorrect");
  });
  if (chosen === correct) score++;
  nextBtn.classList.remove("hidden");
}

nextBtn.addEventListener("click", () => {
  currentQuestionIndex++;
  showQuestion();
});

function showResult() {
  quizContainer.classList.add("hidden");
  backToMenuDuringQuizBtn.classList.add("hidden");
  resultContainer.classList.remove("hidden");
  resultText.textContent = `Quiz termin√© ! Score : ${score} / ${filteredQuestions.length}`;
  const rand = citations[Math.floor(Math.random() * citations.length)];
  citationEl.textContent = rand;
}

backToMenuDuringQuizBtn.addEventListener("click", () => {
  if (confirm("Quitter le quiz ?")) resetQuiz();
});

backToMenuBtn.addEventListener("click", resetQuiz);

function resetQuiz() {
  clearInterval(timerId);
  score = 0;
  currentQuestionIndex = 0;
  filteredQuestions = [];
  menu.classList.remove("hidden");
  quizContainer.classList.add("hidden");
  resultContainer.classList.add("hidden");
  backToMenuDuringQuizBtn.classList.add("hidden");
  themeSelect.value = "";
}
